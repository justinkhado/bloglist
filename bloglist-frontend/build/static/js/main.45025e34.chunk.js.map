{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","services/users.js","reducers/blogReducer.js","services/login.js","reducers/currentUserReducer.js","reducers/usersReducer.js","store.js","components/Blogs/EditBlogForm.js","components/Blogs/BlogComments.js","components/Blogs/LikeCount.js","components/Blogs/Blog.js","components/Blogs/BlogForm.js","components/SortBy.js","components/Blogs/Blogs.js","components/Header.js","components/User/LikedBlogs.js","components/LoginForm.js","components/NavBar.js","components/Notification.js","components/User/UserBlogs.js","App.js","index.js"],"names":["timeoutId","baseUrl","token","config","setToken","newToken","headers","Authorization","getAll","a","axios","get","response","data","create","newObject","post","update","id","put","remove","delete","comment","getUser","register","credentials","createBlog","blog","user","dispatch","newBlog","username","name","type","blogService","addComment","commentObject","editUrl","url","editText","text","blogReducer","state","action","map","filter","comments","concat","login","setUser","password","loginService","window","localStorage","setItem","JSON","stringify","logOut","removeItem","currentUserReducer","likedBlogs","userService","addToUserBlogs","removeFromUserBlogs","userId","blogId","usersReducer","blogs","b","setNotification","notification","time","clearTimeout","setTimeout","notificationReducer","reducer","combineReducers","currentUser","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","EditBlogForm","setToggleEdit","useDispatch","useState","edit","setEdit","handleEdit","event","preventDefault","Box","sx","p","component","onSubmit","TextField","label","value","fullWidth","onChange","target","rows","multiline","Button","mt","variant","size","BlogComments","useSelector","setComment","handleComment","match","indexOf","length","message","error","Card","margin","elevation","CardContent","display","flexDirection","alignSelf","onClick","Stack","spacing","index","border","padding","square","Typography","color","textDecoration","Link","to","LikeCount","handleLike","updatedBlog","includes","likes","updatedUser","usersService","like","parse","getItem","style","marginTop","IconButton","paddingTop","Blog","navigate","useNavigate","toggleEdit","handleDelete","confirm","title","author","CardActions","paddingLeft","flexGrow","href","overflowWrap","m","justifyContent","Date","date","toLocaleDateString","mr","BlogForm","setTitle","setType","setUrl","setText","handleCreateBlog","returnedBlog","Container","ml","alignItems","maxWidth","ToggleButtonGroup","newType","exclusive","ToggleButton","required","SortBy","sort","handleSortChange","Select","background","marginRight","MenuItem","Blogs","sortedBlogs","setSort","mb","CardActionArea","Header","LikedBlogs","Table","TableHead","TableRow","TableCell","fontWeight","TableBody","width","LoginForm","setUsername","setPassword","passwordConfirmation","setPasswordConfirmation","registering","setRegistering","handleLogin","handleRegister","autoFocus","autoComplete","NavBar","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","marginLeft","aria-controls","currentTarget","Menu","onClose","Notification","Alert","severity","UserBlogs","userBlogs","App","useEffect","loggedUserJSON","userMatch","useMatch","find","u","params","blogMatch","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45025e34.chunk.js","sourcesContent":["const notificationReducer = (state=null, action) => {\r\n  switch(action.type){\r\n  case 'SET_NOTIFICATION':\r\n    return action.data\r\n  case 'REMOVE_NOTIFICATION':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nlet timeoutId\r\n\r\nexport const setNotification = (notification, time=3000) => {\r\n  return async dispatch => {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId)\r\n      timeoutId = null\r\n    }\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      data: notification\r\n    })\r\n    timeoutId = await setTimeout(() => {\r\n      dispatch({\r\n        type: 'REMOVE_NOTIFICATION'\r\n      })\r\n    }, time)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\nlet config = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n  config = {\r\n    headers: { Authorization: token }\r\n  }\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst comment = async (id, newObject) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, newObject, config)\r\n  return response.data\r\n}\r\n\r\nexport default { setToken, getAll, create, update, remove, comment }","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst getUser = async (id) => {\r\n  const response = await axios.get(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst register = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, getUser, update, register }","import blogService from '../services/blogs'\r\nimport usersService from '../services/users'\r\n\r\nconst blogReducer = (state=[], action) => {\r\n  switch(action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'NEW_BLOG':\r\n    return [...state, action.data]\r\n  case 'LIKE':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : action.data\r\n    )\r\n  case 'DELETE':\r\n    return state.filter(blog => blog.id !== action.data.id)\r\n  case 'COMMENT':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : {\r\n        ...blog, comments: blog.comments.concat(action.data.commentObject)\r\n      }\r\n    )\r\n  case 'EDIT_URL':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : { ...blog, url: action.data.url }\r\n    )\r\n\r\n  case 'EDIT_TEXT':\r\n    return state.map(blog =>\r\n      blog.id !== action.data.id ? blog : { ...blog, text: action.data.text }\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport const createBlog = (blog, user) => {\r\n  return async dispatch => {\r\n    const newBlog = {\r\n      ...blog,\r\n      user: {\r\n        username: user.username,\r\n        name: user.name,\r\n        id: blog.user\r\n      }\r\n    }\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const like = (blog, user) => {\r\n  return async dispatch => {\r\n    await blogService.update(blog.id, { likes: blog.likes })\r\n    await usersService.update(user.id, user)\r\n    dispatch({\r\n      type: 'LIKE',\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const remove = (blog) => {\r\n  return async dispatch => {\r\n    await blogService.remove(blog.id)\r\n    dispatch({\r\n      type: 'DELETE',\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = (id, commentObject) => {\r\n  return async dispatch => {\r\n    await blogService.comment(id, commentObject)\r\n    dispatch({\r\n      type: 'COMMENT',\r\n      data: { id, commentObject }\r\n    })\r\n  }\r\n}\r\n\r\nexport const editUrl = (id, url) => {\r\n  return async dispatch => {\r\n    await blogService.update(id, { url })\r\n    dispatch({\r\n      type: 'EDIT_URL',\r\n      data: { id, url }\r\n    })\r\n  }\r\n}\r\n\r\nexport const editText = (id, text) => {\r\n  return async dispatch => {\r\n    await blogService.update(id, { text })\r\n    dispatch({\r\n      type: 'EDIT_TEXT',\r\n      data: { id, text }\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\n\r\nconst currentUserReducer = (state=null, action) => {\r\n  switch(action.type) {\r\n  case 'LOGGED_USER':\r\n    return action.data\r\n  case 'SET_USER':\r\n    return action.data\r\n  case 'LOG_OUT':\r\n    return null\r\n  case 'USER_LIKES':\r\n    return {\r\n      ...state,\r\n      likedBlogs: action.data\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const loggedInUser = () => {\r\n  return async dispatch => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const currentUser = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(currentUser.token)\r\n      dispatch({\r\n        type: 'LOGGED_USER',\r\n        data: currentUser\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const setUser = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login({ username, password })\r\n    if (user) {\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'SET_USER',\r\n        data: user\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch({\r\n      type: 'LOG_OUT'\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateLikedBlogs = (likedBlogs) => {\r\n  return dispatch => {\r\n    const currentUser = JSON.parse(window.localStorage.getItem('loggedBlogAppUser'))\r\n    const updatedUser = { ...currentUser, likedBlogs }\r\n    window.localStorage.setItem(\r\n      'loggedBlogAppUser', JSON.stringify(updatedUser)\r\n    )\r\n    dispatch({\r\n      type: 'USER_LIKES',\r\n      data: likedBlogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default currentUserReducer","import userService from '../services/users'\r\n\r\nconst usersReducer = (state=[], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS':\r\n    return action.data\r\n  case 'REGISTER':\r\n    return [...state, action.data]\r\n  case 'ADD_USER_BLOG':\r\n    return state.map(user =>\r\n      user.id !== action.data.id ? user : { ...user, blogs: user.blogs.concat(action.data.blog) }\r\n    )\r\n  case 'REMOVE_USER_BLOG':\r\n    return state.map(user =>\r\n      user.id !== action.data.userId\r\n        ? user\r\n        : { ...user, blogs: user.blogs.filter(b => b.id !== action.data.blogId) }\r\n    )\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async dispatch => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport const register = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await userService.register({ username, password })\r\n    dispatch({\r\n      type: 'REGISTER',\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport const addToUserBlogs = (blog, user) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'ADD_USER_BLOG',\r\n      data: { id: user.id, blog }\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeFromUserBlogs = (blog, user) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'REMOVE_USER_BLOG',\r\n      data: { userId: user.id, blogId: blog.id }\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport blogReducer from './reducers/blogReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  currentUser: currentUserReducer,\r\n  users: usersReducer,\r\n  notification: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { editText, editUrl } from '../../reducers/blogReducer'\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField\r\n} from '@mui/material'\r\n\r\nconst EditBlogForm = ({ blog, setToggleEdit }) => {\r\n  const dispatch = useDispatch()\r\n  const [edit, setEdit] = blog.type === 'link'\r\n    ? useState(blog.url)\r\n    : useState(blog.text)\r\n\r\n  const handleEdit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (blog.type === 'link') {\r\n      await dispatch(editUrl(blog.id, edit))\r\n    }\r\n    else {\r\n      await dispatch(editText(blog.id, edit))\r\n    }\r\n\r\n    setToggleEdit(false)\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{ p: 1 }}\r\n      component='form'\r\n      onSubmit={handleEdit}\r\n    >\r\n      {blog.type === 'link' ?\r\n        <TextField\r\n          label='url'\r\n          value={edit}\r\n          fullWidth\r\n          onChange={({ target }) => setEdit(target.value)}\r\n        /> :\r\n        <TextField\r\n          label='text'\r\n          value={edit}\r\n          rows={3}\r\n          multiline\r\n          fullWidth\r\n          onChange={({ target }) => setEdit(target.value)}\r\n        />\r\n      }\r\n      <Button\r\n        sx={{ mt: 1 }}\r\n        variant='contained'\r\n        size='small'\r\n        type='submit'\r\n      >\r\n        Save\r\n      </Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default EditBlogForm","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addComment } from '../../reducers/blogReducer'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport { logOut } from '../../reducers/currentUserReducer'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Link as MuiLink,\r\n  Stack,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst BlogComments = ({ blog }) => {\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(state => state.currentUser)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const handleComment = async () => {\r\n    // check if comment null, empty, or white-space only\r\n    if (\r\n      comment === null ||\r\n      comment.match(/^ *$/) !== null ||\r\n      (comment.indexOf('\\n') !== -1 && comment.length === 1)\r\n    ) {\r\n      dispatch(setNotification({\r\n        message: 'comment can\\'t be empty',\r\n        error: true\r\n      }))\r\n      setComment('')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const commentObject = {\r\n        comment,\r\n        username: currentUser.username,\r\n        userId: currentUser.id\r\n      }\r\n      await dispatch(addComment(blog.id, commentObject))\r\n      setComment('')\r\n    } catch (error) {\r\n      dispatch(setNotification({\r\n        message: 'Token expired - log in again',\r\n        error: true\r\n      }))\r\n      dispatch(logOut())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      sx={{ margin: 2 }}\r\n      variant='elevation'\r\n      elevation={5}\r\n    >\r\n      <CardContent\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <TextField\r\n          value={comment}\r\n          rows={3}\r\n          onChange={(event) => setComment(event.target.value)}\r\n          multiline\r\n        />\r\n        <Button\r\n          sx={{\r\n            mt: 1,\r\n            alignSelf: 'flex-start'\r\n          }}\r\n          variant='contained'\r\n          size='small'\r\n          onClick={handleComment}\r\n        >\r\n          submit\r\n        </Button>\r\n        <Stack\r\n          mt={3}\r\n          spacing={1}\r\n        >\r\n          {blog.comments.map((commentObject, index) =>\r\n            <Card\r\n              sx={{\r\n                border: 1,\r\n                padding: 1\r\n              }}\r\n              variant='outlined'\r\n              key={index}\r\n              square\r\n            >\r\n              <Typography>\r\n                {commentObject.comment}\r\n              </Typography>\r\n              <Typography variant='body2' color='text.secondary'>\r\n                {'- '}\r\n                <MuiLink\r\n                  sx={{ textDecoration: 'none' }}\r\n                  component={Link}\r\n                  to={`/users/${commentObject.userId}`}\r\n                >\r\n                  {commentObject.username}\r\n                </MuiLink>\r\n              </Typography>\r\n            </Card>\r\n          )}\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BlogComments","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { like } from '../../reducers/blogReducer'\r\nimport { updateLikedBlogs } from '../../reducers/currentUserReducer'\r\nimport {\r\n  IconButton,\r\n  Typography\r\n} from '@mui/material'\r\nimport FavoriteIcon from '@mui/icons-material/Favorite'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\n\r\nconst LikeCount = ({ blog }) => {\r\n  const style = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignSelf: 'flex-start',\r\n    marginTop: 15\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.currentUser)\r\n\r\n  const handleLike = () => {\r\n    const updatedBlog = user.likedBlogs.includes(blog.id)\r\n      ? { ...blog, likes: blog.likes - 1 }\r\n      : { ...blog, likes: blog.likes + 1 }\r\n\r\n    const updatedUser = user.likedBlogs.includes(blog.id)\r\n      ? {\r\n        ...user,\r\n        likedBlogs: user.likedBlogs.filter(\r\n          id => id !== blog.id\r\n        ) }\r\n      : { ...user, likedBlogs: user.likedBlogs.concat(blog.id) }\r\n\r\n    dispatch(like(updatedBlog, updatedUser))\r\n    dispatch(updateLikedBlogs(updatedUser.likedBlogs))\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      <Typography sx={{ alignSelf: 'center' }} variant='body'>\r\n        {blog.likes}\r\n      </Typography>\r\n      <IconButton\r\n        sx={{ paddingTop: 0 }}\r\n        color='primary'\r\n        onClick={() => handleLike()}\r\n      >\r\n        {user.likedBlogs.includes(blog.id)\r\n          ? <FavoriteIcon />\r\n          : <FavoriteBorderIcon />\r\n        }\r\n      </IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LikeCount","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport EditBlogForm from './EditBlogForm'\r\nimport BlogComments from './BlogComments'\r\nimport LikeCount from './LikeCount'\r\nimport { remove } from '../../reducers/blogReducer'\r\nimport { logOut } from '../../reducers/currentUserReducer'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport { removeFromUserBlogs } from '../../reducers/usersReducer'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Link as MuiLink,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst Blog = ({ blog }) => {\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const user = useSelector(state => state.currentUser)\r\n  const [toggleEdit, setToggleEdit] = useState(false)\r\n\r\n  const handleDelete = async () => {\r\n    if (window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}`)) {\r\n      try {\r\n        await dispatch(remove(blog))\r\n        dispatch(removeFromUserBlogs(blog, user))\r\n        navigate('/')\r\n        dispatch(setNotification({\r\n          message: 'blog successfully deleted'\r\n        }))\r\n      } catch (error) {\r\n        dispatch(setNotification({\r\n          message: 'Token expired - log in again',\r\n          error: true\r\n        }))\r\n        dispatch(logOut())\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        sx={{\r\n          display: 'flex',\r\n          margin: 2\r\n        }}\r\n        elevation={5}\r\n      >\r\n        <CardActions>\r\n          <LikeCount blog={blog} />\r\n        </CardActions>\r\n        <CardContent\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            paddingLeft: 0,\r\n            flexGrow: 1\r\n          }}\r\n        >\r\n          <Typography variant='h6'>\r\n            {blog.title}\r\n          </Typography>\r\n          {toggleEdit ?\r\n            <EditBlogForm blog={blog} setToggleEdit={setToggleEdit} /> :\r\n            <div>\r\n              {blog.type === 'link' ?\r\n                <MuiLink\r\n                  href={\r\n                    blog.url.indexOf('http') !== -1 ? blog.url : `//${blog.url}`\r\n                  }\r\n                >\r\n                  <Typography sx={{ overflowWrap: 'anywhere' }}>\r\n                    {blog.url}\r\n                  </Typography>\r\n                </MuiLink> :\r\n                <Card variant='outlined' square>\r\n                  <Typography m={1}>{blog.text}</Typography>\r\n                </Card>\r\n              }\r\n            </div>\r\n          }\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              paddingTop: 16\r\n            }}\r\n          >\r\n            <Typography variant='body2' color='text.secondary'>\r\n              {`submitted on ${new Date(blog.date).toLocaleDateString()} by `}\r\n              <MuiLink\r\n                sx={{ textDecoration: 'none' }}\r\n                component={Link}\r\n                to={`/users/${blog.user.id}`}\r\n              >\r\n                {blog.user.username}\r\n              </MuiLink>\r\n            </Typography>\r\n            {user.username === blog.user.username &&\r\n              <div>\r\n                {!toggleEdit ?\r\n                  <Button\r\n                    sx={{ mr: 1 }}\r\n                    variant='contained'\r\n                    color='success'\r\n                    size='small'\r\n                    onClick={() => setToggleEdit(true)}\r\n                  >\r\n                    edit\r\n                  </Button> :\r\n                  <Button\r\n                    sx={{ mr: 1 }}\r\n                    size='small'\r\n                    onClick={() => setToggleEdit(false)}\r\n                  >\r\n                    cancel\r\n                  </Button>\r\n                }\r\n                <Button\r\n                  variant='contained'\r\n                  color='error'\r\n                  size='small'\r\n                  onClick={() => handleDelete()}\r\n                >\r\n                  delete\r\n                </Button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <BlogComments blog={blog} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { createBlog } from '../../reducers/blogReducer'\r\nimport { setNotification } from '../../reducers/notificationReducer'\r\nimport { logOut } from '../../reducers/currentUserReducer'\r\nimport { addToUserBlogs } from '../../reducers/usersReducer'\r\nimport blogService from '../../services/blogs'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Button,\r\n  TextField,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst BlogForm = () => {\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.currentUser)\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [type, setType] = useState('link')\r\n  const [url, setUrl] = useState('')\r\n  const [text, setText] = useState('')\r\n\r\n  const handleTypeChange = (event, newType) => {\r\n    setType(newType)\r\n  }\r\n\r\n  const handleCreateBlog = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const blog = type === 'link' ?\r\n      {\r\n        title,\r\n        type,\r\n        url,\r\n        date: new Date()\r\n      } :\r\n      {\r\n        title,\r\n        type,\r\n        text,\r\n        date: new Date()\r\n      }\r\n\r\n    try {\r\n      const returnedBlog = await blogService.create(blog)\r\n      await dispatch(createBlog(returnedBlog, user))\r\n      dispatch(addToUserBlogs(returnedBlog, user))\r\n      setTitle('')\r\n      setUrl('')\r\n\r\n      dispatch(setNotification({\r\n        message: 'blog succesfully created'\r\n      }))\r\n\r\n      navigate('/')\r\n    } catch (error) {\r\n      dispatch(setNotification({\r\n        message: 'Token expired - log in again',\r\n        error: true\r\n      }))\r\n      dispatch(logOut())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        mt: 5,\r\n        ml: 0,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch'\r\n      }}\r\n      maxWidth='md'\r\n    >\r\n      <Card\r\n        sx={{ margin: 2 }}\r\n        variant='elevation'\r\n        elevation={5}\r\n      >\r\n        <CardContent>\r\n          <Typography variant='h5'>share new blog</Typography>\r\n          <ToggleButtonGroup\r\n            sx={{ m: 1 }}\r\n            size='small'\r\n            value={type}\r\n            onChange={handleTypeChange}\r\n            exclusive\r\n          >\r\n            <ToggleButton value='link'>link</ToggleButton>\r\n            <ToggleButton value='text'>text</ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <form onSubmit={handleCreateBlog}>\r\n            <TextField\r\n              label='title'\r\n              value={title}\r\n              onChange={event => setTitle(event.target.value)}\r\n              margin='dense'\r\n              size='small'\r\n              fullWidth\r\n              required\r\n            />\r\n            {type === 'link' ?\r\n              <TextField\r\n                label='url'\r\n                value={url}\r\n                onChange={event => setUrl(event.target.value)}\r\n                margin='dense'\r\n                size='small'\r\n                fullWidth\r\n                required\r\n              /> :\r\n              <TextField\r\n                label='text'\r\n                value={text}\r\n                onChange={event => setText(event.target.value)}\r\n                margin='dense'\r\n                rows={4}\r\n                multiline\r\n                fullWidth\r\n                required\r\n              />\r\n            }\r\n            <Button\r\n              sx={{ mt: 2 }}\r\n              type='submit'\r\n              variant='contained'\r\n            >\r\n              create\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport {\r\n  MenuItem,\r\n  Select\r\n} from '@mui/material'\r\n\r\nconst SortBy = ({ sort, handleSortChange }) => {\r\n  return (\r\n    <Select\r\n      sx={{\r\n        background: 'white',\r\n        alignSelf: 'flex-end',\r\n        margin: 1,\r\n        marginRight: 3,\r\n        paddingLeft: 1\r\n      }}\r\n      variant='standard'\r\n      value={sort}\r\n      onChange={handleSortChange}\r\n    >\r\n      <MenuItem value={'date'}>date</MenuItem>\r\n      <MenuItem value={'likes'}>likes</MenuItem>\r\n    </Select>\r\n  )\r\n}\r\n\r\nexport default SortBy","import React, { useState } from 'react'\r\nimport LikeCount from './LikeCount'\r\nimport SortBy from '../SortBy'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst Blogs = () => {\r\n  const [sort, setSort] = useState('date')\r\n  const blogs = useSelector((state) => {\r\n    return state.blogs\r\n  })\r\n\r\n  const handleSortChange = (event) => {\r\n    setSort(event.target.value)\r\n  }\r\n\r\n  let sortedBlogs\r\n  if (sort === 'date') {\r\n    sortedBlogs = blogs.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n  }\r\n  else{\r\n    sortedBlogs = blogs.sort((a, b) => b.likes - a.likes)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}\r\n    >\r\n      <SortBy sort={sort} handleSortChange={handleSortChange} />\r\n      {sortedBlogs.map(blog =>\r\n        <Card\r\n          sx={{\r\n            display: 'flex',\r\n            m: 2,\r\n            mb: 0\r\n          }}\r\n          elevation={5}\r\n          key={blog.id}\r\n        >\r\n          <CardActions>\r\n            <LikeCount blog={blog} />\r\n          </CardActions>\r\n          <Link\r\n            style={{\r\n              textDecoration: 'none', flexGrow: 1\r\n            }}\r\n            component={CardActionArea}\r\n            to={`/blogs/${blog.id}`}\r\n          >\r\n            <CardContent\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                paddingLeft: 0\r\n              }}\r\n            >\r\n              <Typography variant='h6'>\r\n                {blog.title}\r\n              </Typography>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography variant='body2' color='text.secondary'>\r\n                  {blog.comments.length} comment(s)\r\n                </Typography>\r\n                <Typography variant='body2' color='text.secondary'>\r\n                  submitted on {new Date(blog.date).toLocaleDateString()} by {blog.user.username}\r\n                </Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Link>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport {\r\n  Card,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        background: 'mediumpurple'\r\n      }}\r\n      square\r\n    >\r\n      <Typography\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          padding: 1\r\n        }}\r\n        variant='h2'\r\n        color='white'\r\n      >\r\n        bloglist\r\n      </Typography>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst LikedBlogs = () => {\r\n  const user = useSelector(state => state.currentUser)\r\n  const blogs = useSelector(state => state.blogs)\r\n\r\n  const likedBlogs = blogs.filter(blog =>\r\n    user.likedBlogs.includes(blog.id)\r\n  )\r\n\r\n  const sortedBlogs = likedBlogs.sort((a, b) =>\r\n    new Date(a.date) - new Date(b.date)\r\n  )\r\n\r\n  return (\r\n    <Card sx={{ margin: 2 }}>\r\n      <CardContent\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Typography\r\n          sx={{ alignSelf: 'center' }}\r\n          variant='h4'\r\n        >\r\n          liked blogs\r\n        </Typography>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography sx={{ fontWeight:'bold' }}>\r\n                  title\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography sx={{ fontWeight:'bold' }}>\r\n                  user\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedBlogs.map((blog, index) =>\r\n              <TableRow key={index}>\r\n                <TableCell width='100%'>\r\n                  <Typography component={Link} to={`/blogs/${blog.id}`}>\r\n                    {blog.title}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell width='100%'>\r\n                  <Typography component={Link} to={`/users/${blog.user.id}`}>\r\n                    {blog.user.username}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default LikedBlogs","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setUser } from '../reducers/currentUserReducer'\r\nimport { register } from '../reducers/usersReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Link as MuiLink,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n  const [registering, setRegistering] = useState(false)\r\n\r\n  const handleIsRegistering = () => {\r\n    setRegistering(!registering)\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await dispatch(setUser(username, password))\r\n    }\r\n    catch (exception) {\r\n      dispatch(setNotification({\r\n        message: 'wrong username or password',\r\n        error: true\r\n      }))\r\n      setUsername('')\r\n      setPassword('')\r\n    }\r\n  }\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (password !== passwordConfirmation) {\r\n      dispatch(setNotification({\r\n        message: 'password does not match',\r\n        error: true\r\n      }))\r\n      return\r\n    }\r\n\r\n    try {\r\n      await dispatch(register(username, password))\r\n      await dispatch(setUser(username, password))\r\n      dispatch(setNotification({\r\n        message: 'account successfully created'\r\n      }))\r\n    }\r\n    catch (exception) {\r\n      if (username.length < 6) {\r\n        dispatch(setNotification({\r\n          message: 'username must be at least 5 characters',\r\n          error: true\r\n        }))\r\n      }\r\n      else if (password.length < 9) {\r\n        dispatch(setNotification({\r\n          message: 'password must be at least 8 characters',\r\n          error: true\r\n        }))\r\n      }\r\n      setUsername('')\r\n      setPassword('')\r\n      setPasswordConfirmation('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='xs'>\r\n      <Card\r\n        sx={{ mt: 10 }}\r\n        variant='elevation'\r\n        elevation={5}\r\n      >\r\n        <CardContent>\r\n          <Box\r\n            sx={{\r\n              mt: 1,\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n            component='form'\r\n            onSubmit={\r\n              registering ? handleRegister : handleLogin\r\n            }\r\n          >\r\n            <Typography\r\n              sx={{\r\n                alignSelf: 'center',\r\n                mb: 1\r\n              }}\r\n              variant='h4'\r\n            >\r\n              {registering ? 'register' : 'log in'}\r\n            </Typography>\r\n            <TextField\r\n              label='username'\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              margin='dense'\r\n              required\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              label='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              margin='dense'\r\n              autoComplete='off'\r\n              required\r\n            />\r\n            {registering &&\r\n              <TextField\r\n                label='confirm password'\r\n                type='password'\r\n                value={passwordConfirmation}\r\n                onChange={({ target }) => setPasswordConfirmation(target.value)}\r\n                margin='dense'\r\n                autoComplete='off'\r\n                required\r\n              />\r\n            }\r\n            <Button\r\n              sx={{ mt: 2 }}\r\n              variant='contained'\r\n              id='login-button'\r\n              type='submit'\r\n              fullWidth\r\n            >\r\n              {registering ? 'register' : 'log in'}\r\n            </Button>\r\n            <MuiLink\r\n              sx={{\r\n                mt: 2,\r\n                alignSelf: 'flex-end'\r\n              }}\r\n              component={Button}\r\n              onClick={handleIsRegistering}\r\n            >\r\n              {registering\r\n                ? 'Have an account? Log in'\r\n                : 'Not signed up? Register'\r\n              }\r\n            </MuiLink>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { logOut } from '../reducers/currentUserReducer'\r\nimport { AppBar, Button, Menu, MenuItem, Toolbar } from '@mui/material'\r\n\r\nconst NavBar = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(state => state.currentUser)\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      sx={{ background: 'dimgrey' }}\r\n      position='static'\r\n      elevation={0}\r\n    >\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex'\r\n        }}\r\n        variant='dense'\r\n      >\r\n        <Button color='inherit' component={Link} to='/'>\r\n          blogs\r\n        </Button>\r\n        <Button color='inherit' component={Link} to='/blogs/submit'>\r\n          submit\r\n        </Button>\r\n        <Button\r\n          sx={{ marginLeft: 'auto' }}\r\n          color='inherit'\r\n          aria-controls='user-menu'\r\n          onClick={handleClick}\r\n        >\r\n          {currentUser.username}\r\n        </Button>\r\n        <Menu\r\n          id='user-menu'\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem\r\n            component={Link}\r\n            to={`/users/${currentUser.id}`}\r\n            onClick={handleClose}\r\n          >\r\n            my blogs\r\n          </MenuItem>\r\n          <MenuItem\r\n            component={Link}\r\n            to={`/users/${currentUser.id}/liked`}\r\n            onClick={handleClose}\r\n          >\r\n            liked blogs\r\n          </MenuItem>\r\n          <MenuItem\r\n            color='inherit'\r\n            onClick={() => dispatch(logOut())}\r\n            component={Link}\r\n            to='/'\r\n          >\r\n            log out\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from '@mui/material'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  if (!notification) {\r\n    return null\r\n  }\r\n\r\n  if (notification.error) {\r\n    return (\r\n      <Alert sx={{ mt: 1 }} severity='error'>\r\n        {notification.message}\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Alert sx={{ mt: 1 }}>\r\n      {notification.message}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport SortBy from '../SortBy'\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography\r\n} from '@mui/material'\r\n\r\nconst UserBlogs = ({ user }) => {\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  const [sort, setSort] = useState('date')\r\n\r\n  const blogs = useSelector(state => state.blogs)\r\n  const userBlogs = blogs.filter(blog =>\r\n    blog.user.id === user.id\r\n  )\r\n\r\n  const handleSortChange = (event) => {\r\n    setSort(event.target.value)\r\n  }\r\n\r\n  let sortedBlogs\r\n  if (sort === 'date') {\r\n    sortedBlogs = userBlogs.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n  }\r\n  else{\r\n    sortedBlogs = userBlogs.sort((a, b) => b.likes - a.likes)\r\n  }\r\n\r\n  return (\r\n    <Card sx={{ margin: 2 }}>\r\n      <CardContent\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <SortBy sort={sort} handleSortChange={handleSortChange} />\r\n        <Typography\r\n          sx={{ alignSelf: 'center' }}\r\n          variant='h4'\r\n        >\r\n          {user.username}\r\n        </Typography>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography sx={{ fontWeight:'bold' }}>\r\n                  title\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography sx={{ fontWeight:'bold' }}>\r\n                  likes\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography sx={{ fontWeight:'bold' }}>\r\n                  date\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {sortedBlogs.map((blog, index) =>\r\n              <TableRow key={index}>\r\n                <TableCell width='100%'>\r\n                  <Typography component={Link} to={`/blogs/${blog.id}`}>\r\n                    {blog.title}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>{blog.likes}</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography>\r\n                    {(new Date(blog.date)).toLocaleDateString()}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UserBlogs","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Routes,\r\n  Route,\r\n  useMatch\r\n} from 'react-router-dom'\r\n\r\nimport Blog from './components/Blogs/Blog'\r\nimport BlogForm from './components/Blogs/BlogForm'\r\nimport Blogs from './components/Blogs/Blogs'\r\nimport Header from './components/Header'\r\nimport LikedBlogs from './components/User/LikedBlogs'\r\nimport LoginForm from './components/LoginForm'\r\nimport NavBar from './components/NavBar'\r\nimport Notification from './components/Notification'\r\nimport UserBlogs from './components/User/UserBlogs'\r\n\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { loggedInUser } from './reducers/currentUserReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\n\r\nimport { Container } from '@mui/material'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(loggedInUser())\r\n    dispatch(initializeBlogs())\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  const currentUser = useSelector(state => state.currentUser)\r\n  const users = useSelector(state => state.users)\r\n  const blogs = useSelector(state => state.blogs)\r\n\r\n  const userMatch = useMatch('/users/:id')\r\n  const user = userMatch\r\n    ? users.find(u => u.id === userMatch.params.id)\r\n    : null\r\n\r\n  const blogMatch = useMatch('/blogs/:id')\r\n  const blog = blogMatch\r\n    ? blogs.find(b => b.id === blogMatch.params.id)\r\n    : null\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <Container>\r\n        <Header />\r\n        <Notification />\r\n        <LoginForm />\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <Header />\r\n      <NavBar />\r\n      <Notification />\r\n      <Routes>\r\n        <Route path='/' element={<div><Blogs /></div>} />\r\n        <Route path='/blogs/:id' element={<Blog blog={blog} />} />\r\n        <Route path='/blogs/submit' element={<BlogForm />} />\r\n        <Route path='/users/:id' element={<UserBlogs user={user} />} />\r\n        <Route path='/users/:id/liked' element={<LikedBlogs />} />\r\n      </Routes>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './store'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}